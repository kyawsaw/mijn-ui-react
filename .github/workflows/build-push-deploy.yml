name: Build, Push and Deploy

# https://docs.github.com/en/actions/writing-workflows/choosing-when-your-workflow-runs/events-that-trigger-workflows#running-a-workflow-based-on-the-conclusion-of-another-workflow
on:
  workflow_run:
    workflows: ["Uint Tests"]
    types: [completed]

# https://stackoverflow.com/questions/75584775/trigger-a-github-workflow-if-two-other-workflows-have-been-successful
# https://docs.github.com/en/actions/sharing-automations/reusing-workflows
jobs:
  build-and-push:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      # Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Log in to GitHub Container Registry 
      # https://docs.docker.com/build/ci/github-actions/push-multi-registries/
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.PA_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/mijnui-docs-react:latest
            ghcr.io/${{ github.repository_owner }}/mijnui-docs-react:${{ github.sha }}

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: build-and-push

  #   steps:
  #     # Checkout the repository
  #     - name: Checkout Code
  #       uses: actions/checkout@v3

  #     # Set up SSH
  #     - name: Add SSH Key
  #       run: |
  #         mkdir -p ~/.ssh
  #         echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
  #         chmod 400 ~/.ssh/id_ed25519
  #         ssh-keyscan -H ${{ secrets.DEPLOY_HOST }} >> ~/.ssh/known_hosts

  #     # Deploy to Server
  #     - name: Deploy to Server
  #       run: |
  #         ssh -o StrictHostKeyChecking=no ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }} << 'EOF'
  #         cd ~/mijn-ui
  #         docker compose pull
  #         docker compose up -d
  #         EOF

  on-failure:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'failure' }}
    steps:
      - run: echo 'The triggering workflow failed'